/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.csl;

import edu.stanford.nlp.trees.Tree;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.WindowConstants;
import static org.csl.Nlp4.getDependencies;

/**
 *
 * @author Rehman <12003065-317@umt.edu.pk>
 */
public class Demo1 extends javax.swing.JFrame {

    /**
     * Creates new form Demo1
     */
    static Nlp4 parser = new Nlp4();
    static String treeOutput;
    static String str;
    static String dep;
    static MyTree tree2;
    static MyList list;
    static String output;
    MyUtils utils;
    public Demo1() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        utils = new MyUtils();
        MyUtils.verbs.clear();
        MyUtils.rules.clear();
        if(!Preferences.preferencesInitialized){
            Preferences.setUserPreferences();
        }
        utils.initializeVerbsHashtable();
        utils.readRulesFile();
       
        System.out.println("Verb entries ="+utils.verbs.size());
        System.out.println(utils.rules.size()+" rules found.");
        //this.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txpInputSentence = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        txpDependencies = new javax.swing.JTextPane();
        lblInputSentence = new javax.swing.JLabel();
        btnGetStanfordOutput = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txpStanfordOutput = new javax.swing.JTextPane();
        btnConstructTree = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txpTree1 = new javax.swing.JTextPane();
        btnGetDependencies = new javax.swing.JButton();
        btnAnnotateTree = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        txpTree2 = new javax.swing.JTextPane();
        btnRenameTree = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txpTree3 = new javax.swing.JTextPane();
        btnConstructPSLTree = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        txpTree4 = new javax.swing.JTextPane();
        btnGetTranslatedSentence = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        txpTranslatedSentence = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        txtTense = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();
        btnTranslate = new javax.swing.JButton();

        setTitle("Translate Sentence Step by Step");

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1000, 1300));

        jPanel1.setBackground(new java.awt.Color(182, 207, 164));
        jPanel1.setAutoscrolls(true);
        jPanel1.setPreferredSize(new java.awt.Dimension(1340, 700));

        txpInputSentence.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(txpInputSentence);

        txpDependencies.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane4.setViewportView(txpDependencies);

        lblInputSentence.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblInputSentence.setText("Input Sentence: ");

        btnGetStanfordOutput.setBackground(new java.awt.Color(201, 201, 121));
        btnGetStanfordOutput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGetStanfordOutput.setText("1. Get Natural Language Parser Output");
        btnGetStanfordOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetStanfordOutputActionPerformed(evt);
            }
        });

        txpStanfordOutput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane5.setViewportView(txpStanfordOutput);

        btnConstructTree.setBackground(new java.awt.Color(201, 201, 121));
        btnConstructTree.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConstructTree.setText("3. Construct English Tree");
        btnConstructTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConstructTreeActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(txpTree1);

        btnGetDependencies.setBackground(new java.awt.Color(201, 201, 121));
        btnGetDependencies.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGetDependencies.setText("2. Get Typed Dependencies");
        btnGetDependencies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDependenciesActionPerformed(evt);
            }
        });

        btnAnnotateTree.setBackground(new java.awt.Color(201, 201, 121));
        btnAnnotateTree.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAnnotateTree.setText("4. Add Dependencies Information");
        btnAnnotateTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnotateTreeActionPerformed(evt);
            }
        });

        jScrollPane6.setViewportView(txpTree2);

        btnRenameTree.setBackground(new java.awt.Color(201, 201, 121));
        btnRenameTree.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRenameTree.setText("5. Rename Tree Nodes");
        btnRenameTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRenameTreeActionPerformed(evt);
            }
        });

        jScrollPane7.setViewportView(txpTree3);

        btnConstructPSLTree.setBackground(new java.awt.Color(201, 201, 121));
        btnConstructPSLTree.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConstructPSLTree.setText("6. Contruct Equivalent PSL Tree");
        btnConstructPSLTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConstructPSLTreeActionPerformed(evt);
            }
        });

        jScrollPane8.setViewportView(txpTree4);

        btnGetTranslatedSentence.setBackground(new java.awt.Color(201, 201, 121));
        btnGetTranslatedSentence.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGetTranslatedSentence.setText("7. Get Translated Sentence");
        btnGetTranslatedSentence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetTranslatedSentenceActionPerformed(evt);
            }
        });

        txpTranslatedSentence.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jScrollPane10.setViewportView(txpTranslatedSentence);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Tense:");

        txtTense.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTense.setForeground(new java.awt.Color(204, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Sentence Structure Type: ");

        txtType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtType.setForeground(new java.awt.Color(51, 0, 204));

        btnTranslate.setBackground(new java.awt.Color(201, 201, 121));
        btnTranslate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTranslate.setText("Translate (Do All Steps)");
        btnTranslate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTranslateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGetTranslatedSentence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGetDependencies, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblInputSentence)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTense, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtType))
                    .addComponent(jScrollPane10)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnConstructTree, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAnnotateTree, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRenameTree, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnConstructPSLTree, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(jScrollPane8))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnGetStanfordOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTranslate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblInputSentence))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGetStanfordOutput)
                    .addComponent(btnTranslate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGetDependencies)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConstructTree)
                    .addComponent(btnAnnotateTree)
                    .addComponent(btnRenameTree)
                    .addComponent(btnConstructPSLTree))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGetTranslatedSentence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetTranslatedSentenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetTranslatedSentenceActionPerformed
        if(str==null){
            txpTranslatedSentence.setText("Error: Input Sentence not found.");
            return;
        }
        if(tree2==null){
            txpTranslatedSentence.setText("Error: Tree not found.");
            return;
        }
        String translatedSentence = output;
        if(utils.isInterrogative(str)){
            translatedSentence+="?";
        }else{
            translatedSentence+=".";
        }
        txpTranslatedSentence.setText(translatedSentence);
    }//GEN-LAST:event_btnGetTranslatedSentenceActionPerformed

    private void btnConstructPSLTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConstructPSLTreeActionPerformed
        if(tree2==null){
            txpTree4.setText("Error: Build Tree First.");
            return;
        }
        list = MyUtils.constructAnnotatedList(treeOutput, dep);
        int type = MyUtils.getSentenceStructureType(list);
        if(type==1){
            utils.constructPSLTree(tree2);
            String tree2Diagram = tree2.getTreeDiagram();
            output = tree2.toString();
            txpTree4.setText(tree2Diagram);
        }else{
            output = MyUtils.translate(str, tree2, list);
            txpTree4.setText(MyUtils.pslTreeComplex);
        }
        txtType.setText(MyUtils.getTypeName(type));
    }//GEN-LAST:event_btnConstructPSLTreeActionPerformed

    private void btnRenameTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRenameTreeActionPerformed
        if(tree2==null){
            txpTree3.setText("Error: Build Tree First.");
            return;
        }
        int a = MyUtils.getTense(str, tree2);
        boolean isWH = MyUtils.isWHQuestion(str);
        String tenseName = MyUtils.getSentenseName(str,a,isWH);
        utils.renameTree(str,tree2);
        String tree3Diagram = tree2.getTreeDiagram();
        txpTree3.setText(tree3Diagram);
        txtTense.setText(tenseName);
    }//GEN-LAST:event_btnRenameTreeActionPerformed

    private void btnAnnotateTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnotateTreeActionPerformed
        if(treeOutput==null||dep==null){
            txpTree2.setText("Error: Complete previous steps first.");
            return;
        }
        tree2= utils.constructAnnotatedTree(treeOutput,dep);
        String tree2Diagram = tree2.getTreeDiagram();
        txpTree2.setText(tree2Diagram);
    }//GEN-LAST:event_btnAnnotateTreeActionPerformed

    private void btnGetDependenciesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDependenciesActionPerformed
        if(str==null){
            txpDependencies.setText("Error: No Input Sentence Found.");
            return;
        }
        String str2 = str.replace("?", ""); // remove question mark if any (dependency tool correction)
        dep= getDependencies(str2);
        txpDependencies.setText(dep);
    }//GEN-LAST:event_btnGetDependenciesActionPerformed

    private void btnConstructTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConstructTreeActionPerformed
        MyTree tree1 = utils.constructTree(treeOutput);
        String tree1Diagram = tree1.getTreeDiagram();
        txpTree1.setText(tree1Diagram);
    }//GEN-LAST:event_btnConstructTreeActionPerformed

    private void btnGetStanfordOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetStanfordOutputActionPerformed
        str = txpInputSentence.getText();
        Tree tree = parser.parse(str);
        treeOutput=tree.toString();
        txpStanfordOutput.setText(treeOutput);
    }//GEN-LAST:event_btnGetStanfordOutputActionPerformed

    private void btnTranslateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTranslateActionPerformed
        str = txpInputSentence.getText();
        Tree tree = parser.parse(str);
        treeOutput=tree.toString();
        txpStanfordOutput.setText(treeOutput);
            if(str==null){
            txpDependencies.setText("Error: No Input Sentence Found.");
            return;
        }
        String str2 = str.replace("?", ""); // remove question mark if any (dependency tool correction)
        dep= getDependencies(str2);
        txpDependencies.setText(dep);
        MyTree tree1 = utils.constructTree(treeOutput);
        String tree1Diagram = tree1.getTreeDiagram();
        txpTree1.setText(tree1Diagram);
        if(treeOutput==null||dep==null){
            txpTree2.setText("Error: Complete previous steps first.");
            return;
        }
        tree2= utils.constructAnnotatedTree(treeOutput,dep);
        String tree2Diagram = tree2.getTreeDiagram();
        txpTree2.setText(tree2Diagram);
        if(tree2==null){
            txpTree3.setText("Error: Build Tree First.");
            return;
        }
        int a = MyUtils.getTense(str, tree2);
        boolean isWH = MyUtils.isWHQuestion(str);
        String tenseName = MyUtils.getSentenseName(str,a,isWH);
        utils.renameTree(str,tree2);
        String tree3Diagram = tree2.getTreeDiagram();
        txpTree3.setText(tree3Diagram);
        txtTense.setText(tenseName);
        if(tree2==null){
            txpTree4.setText("Error: Build Tree First.");
            return;
        }
        list = MyUtils.constructAnnotatedList(treeOutput, dep);
        int type = MyUtils.getSentenceStructureType(list);
        if(type==1){
            utils.constructPSLTree(tree2);
            tree2Diagram = tree2.getTreeDiagram();
            output = tree2.toString();
            txpTree4.setText(tree2Diagram);
            if(utils.isInterrogative(str)){
            output+="?";
            }else{
                output+=".";
            }
        }else{
            MyTree treeForCompound = MyUtils.constructAnnotatedTree(treeOutput, dep);
            output = MyUtils.translate(str, treeForCompound, list);
            txpTree4.setText(MyUtils.pslTreeComplex);
            txtTense.setText("");
        }
        txtType.setText(MyUtils.getTypeName(type));
        String translatedSentence = output;
        
        txpTranslatedSentence.setText(translatedSentence);
    }//GEN-LAST:event_btnTranslateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Demo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Demo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Demo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Demo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Demo1().setVisible(true);
            }
        });
        // make all writes to the System.err stream silent (done to remove stanford log output)
        PrintStream err = System.err;
        System.setErr(new PrintStream(new OutputStream() {
            public void write(int b) {
            }
        }));
        
        // set error to normal again
        System.setErr(err);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnnotateTree;
    private javax.swing.JButton btnConstructPSLTree;
    private javax.swing.JButton btnConstructTree;
    private javax.swing.JButton btnGetDependencies;
    private javax.swing.JButton btnGetStanfordOutput;
    private javax.swing.JButton btnGetTranslatedSentence;
    private javax.swing.JButton btnRenameTree;
    private javax.swing.JButton btnTranslate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lblInputSentence;
    private javax.swing.JTextPane txpDependencies;
    private javax.swing.JTextPane txpInputSentence;
    private javax.swing.JTextPane txpStanfordOutput;
    private javax.swing.JTextPane txpTranslatedSentence;
    private javax.swing.JTextPane txpTree1;
    private javax.swing.JTextPane txpTree2;
    private javax.swing.JTextPane txpTree3;
    private javax.swing.JTextPane txpTree4;
    private javax.swing.JTextField txtTense;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables
}
