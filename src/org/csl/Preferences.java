/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.csl;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Rehman
 */
public class Preferences extends javax.swing.JFrame {

    private static Preferences preferencesInstance = null; // singleton object to make preferences a singleton class
    public static String rulesDirectory; // grammar rules file directory + name
    public static String hamnosysDirectory; // hamnosys database files directory
    public static boolean preferencesInitialized = false;
    public static ArrayList<String> folderNames = new ArrayList();
    public static int selectedLanguageIndex = 0;
    public static String selectedLanguageName = "";
    /**
     * Creates new form Preferences
     */
    private Preferences() {
        
        setUserPreferences();
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        txpRulesPath.setText(rulesDirectory);
        initComboBox();
    }
    public static Preferences getPreferencesInstance(){
        if(preferencesInstance==null){
            preferencesInstance= new Preferences();
        }
        return preferencesInstance;
    }
    private void initComboBox(){
        initFolderNames();
        cmbLanguages.setModel(new DefaultComboBoxModel(folderNames.toArray()));
        cmbLanguages.setSelectedIndex(selectedLanguageIndex);
    }
    private static void initFolderNames(){
        File folder = new File(System.getProperty("user.dir")+"\\resources\\Hamnosys Database");
        File[] folders = folder.listFiles();
        folderNames.clear();
        for(int i=0; i<folders.length; i++){
            if(folders[i].isDirectory()){
                folderNames.add(folders[i].getName());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        btnSaveSettings = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        pnlHamnosys = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbLanguages = new javax.swing.JComboBox<>();
        pnlGrammarFile = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txpRulesPath = new javax.swing.JTextPane();
        btnChangeRulesDirectory = new javax.swing.JButton();
        btnOpenRulesFile = new javax.swing.JButton();
        btnReloadRules = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Program Settings");
        setResizable(false);

        pnlMain.setBackground(new java.awt.Color(230, 216, 188));

        btnSaveSettings.setBackground(new java.awt.Color(126, 42, 33));
        btnSaveSettings.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSaveSettings.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveSettings.setText("Save Settings");
        btnSaveSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveSettingsActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(238, 238, 188));
        jLabel3.setFont(new java.awt.Font("Cambria", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(126, 42, 33));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Program Settings");

        pnlHamnosys.setBackground(new java.awt.Color(215, 194, 121));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("HamNoSys Database:");

        cmbLanguages.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbLanguages.setForeground(new java.awt.Color(126, 42, 33));
        cmbLanguages.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLanguages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLanguagesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHamnosysLayout = new javax.swing.GroupLayout(pnlHamnosys);
        pnlHamnosys.setLayout(pnlHamnosysLayout);
        pnlHamnosysLayout.setHorizontalGroup(
            pnlHamnosysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHamnosysLayout.createSequentialGroup()
                .addGroup(pnlHamnosysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHamnosysLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(pnlHamnosysLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(cmbLanguages, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlHamnosysLayout.setVerticalGroup(
            pnlHamnosysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHamnosysLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cmbLanguages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pnlGrammarFile.setBackground(new java.awt.Color(215, 194, 121));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Grammar File Location:");

        jScrollPane1.setViewportView(txpRulesPath);

        btnChangeRulesDirectory.setBackground(new java.awt.Color(126, 42, 33));
        btnChangeRulesDirectory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnChangeRulesDirectory.setForeground(new java.awt.Color(255, 255, 255));
        btnChangeRulesDirectory.setText("Change Directory");
        btnChangeRulesDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeRulesDirectoryActionPerformed(evt);
            }
        });

        btnOpenRulesFile.setBackground(new java.awt.Color(126, 42, 33));
        btnOpenRulesFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnOpenRulesFile.setForeground(new java.awt.Color(255, 255, 255));
        btnOpenRulesFile.setText("Open File");
        btnOpenRulesFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenRulesFileActionPerformed(evt);
            }
        });

        btnReloadRules.setBackground(new java.awt.Color(126, 42, 33));
        btnReloadRules.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReloadRules.setForeground(new java.awt.Color(255, 255, 255));
        btnReloadRules.setText("Reload Rules");
        btnReloadRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadRulesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlGrammarFileLayout = new javax.swing.GroupLayout(pnlGrammarFile);
        pnlGrammarFile.setLayout(pnlGrammarFileLayout);
        pnlGrammarFileLayout.setHorizontalGroup(
            pnlGrammarFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGrammarFileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGrammarFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlGrammarFileLayout.createSequentialGroup()
                        .addGroup(pnlGrammarFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(pnlGrammarFileLayout.createSequentialGroup()
                                .addComponent(btnOpenRulesFile, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnReloadRules, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnChangeRulesDirectory)))
                .addContainerGap())
        );
        pnlGrammarFileLayout.setVerticalGroup(
            pnlGrammarFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGrammarFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlGrammarFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpenRulesFile)
                    .addComponent(btnChangeRulesDirectory)
                    .addComponent(btnReloadRules))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlGrammarFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlHamnosys, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSaveSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlGrammarFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlHamnosys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSaveSettings)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveSettingsActionPerformed
        String rulesFile = txpRulesPath.getText();
        String hamnosysPath = System.getProperty("user.dir")+"\\resources\\Hamnosys Database\\";
        hamnosysPath+=cmbLanguages.getSelectedItem().toString();
        rulesDirectory = rulesFile;
        hamnosysDirectory = hamnosysPath;
        selectedLanguageIndex = cmbLanguages.getSelectedIndex();
        saveUserPreferencesToFile();
        MyUtils.rules.clear();
        MyUtils.readRulesFile();
        TranslationWithAvatar.Hamnosys.clear();
        TranslationWithAvatar.loadSignDataBase();
        TranslationWithAvatar.preferencesChanged = true;
        this.dispose();
    }//GEN-LAST:event_btnSaveSettingsActionPerformed

    private void btnOpenRulesFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenRulesFileActionPerformed
        ProcessBuilder pb = new ProcessBuilder("Notepad.exe", rulesDirectory);
        try {
            pb.start();
        } catch (IOException ex) {
            Logger.getLogger(Preferences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOpenRulesFileActionPerformed

    private void btnChangeRulesDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeRulesDirectoryActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Select Rules File");
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        
        if(chooser.showOpenDialog(this)== JFileChooser.APPROVE_OPTION){
            String name = chooser.getSelectedFile().getPath();
            if(name.endsWith(".txt")){
                txpRulesPath.setText(name);
            }else{
                JOptionPane.showMessageDialog(this,"Error: You must select a text file.");
            }
            System.out.println("getCurrentDirectory(): "+ chooser.getCurrentDirectory());
            System.out.println("getSelectedFile(): "+ chooser.getSelectedFile());
        }else{
            System.out.println("No selection.");
        }
    }//GEN-LAST:event_btnChangeRulesDirectoryActionPerformed

    private void btnReloadRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadRulesActionPerformed
        MyUtils.rules.clear();
        MyUtils.readRulesFile();
    }//GEN-LAST:event_btnReloadRulesActionPerformed

    private void cmbLanguagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLanguagesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbLanguagesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Preferences.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Preferences.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Preferences.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Preferences.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Preferences().setVisible(true);
            }
        });
    }
    public static void setDefaultPreferences(){
        rulesDirectory = System.getProperty("user.dir")+"\\resources\\rules.txt";
        hamnosysDirectory = System.getProperty("user.dir")+"\\resources\\Hamnosys Database\\PSL";
    }
    public static void setDefaultRulesDirectory(){
        rulesDirectory = System.getProperty("user.dir")+"\\resources\\rules.txt";
    }
    public static void setDefaultHamnosysDirectory(){
        hamnosysDirectory = System.getProperty("user.dir")+"\\resources\\Hamnosys Database\\PSL";
    }
    public static void setUserPreferences() {
        preferencesInitialized = true;
        File file = new File(System.getProperty("user.dir") + "\\resources\\preferences.txt");
        try{
            BufferedReader br = new BufferedReader(new FileReader(file));
            String rulesPath = br.readLine();
            String hamnosysPath = br.readLine();
            String languageNo = br.readLine();
            br.close();
            if(rulesPath!=null&&(new File(rulesPath).exists())){
                rulesDirectory = rulesPath;
            }else{
                System.out.println("Preferences Rules file not found, set to default.");
                setDefaultRulesDirectory();
            }
            if(hamnosysPath!=null&&(new File(hamnosysPath).exists())){
                hamnosysDirectory = hamnosysPath;
            }else{
                System.out.println("Hamnosys database directory not found, set to default.");
                setDefaultHamnosysDirectory();
            }
            if(languageNo!=null){
                selectedLanguageIndex = Integer.parseInt(languageNo);
            }else{
                selectedLanguageIndex = 0;
            }
            initFolderNames();
            if(selectedLanguageIndex<=folderNames.size())
                selectedLanguageName = folderNames.get(selectedLanguageIndex);
        }catch(IOException e){
            System.out.println("Error reading preferences file.");
            setDefaultPreferences();
        }
    }
    public static void saveUserPreferencesToFile(){
        File file = new File(System.getProperty("user.dir") + "\\resources\\preferences.txt");
        try{
            PrintWriter pw = new PrintWriter(new FileWriter(file));
            pw.println(rulesDirectory);
            pw.println(hamnosysDirectory);
            pw.println(Integer.toString(selectedLanguageIndex));
            pw.close();
            if(selectedLanguageIndex<=folderNames.size())
                selectedLanguageName = folderNames.get(selectedLanguageIndex);
        }catch(IOException e){
            System.out.println("Error writing preferences file.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangeRulesDirectory;
    private javax.swing.JButton btnOpenRulesFile;
    private javax.swing.JButton btnReloadRules;
    private javax.swing.JButton btnSaveSettings;
    private javax.swing.JComboBox<String> cmbLanguages;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlGrammarFile;
    private javax.swing.JPanel pnlHamnosys;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTextPane txpRulesPath;
    // End of variables declaration//GEN-END:variables
}
