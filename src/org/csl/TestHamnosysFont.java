/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.csl;

import java.awt.Font;
import java.awt.FontFormatException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Rehman
 */
// this class is created to convert gathered hamnosys data in proper format
public class TestHamnosysFont extends javax.swing.JFrame {
    ArrayList<File> inputFiles = new ArrayList<File>();
    ArrayList<String> glosses = new ArrayList();
    ArrayList<String> hamnosys = new ArrayList();
    /**
     * Creates new form Test
     */
    public TestHamnosysFont() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("output hamnosys from files");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txaOutput.setColumns(20);
        txaOutput.setFont(new java.awt.Font("Hamnosysunicode", 0, 13)); // NOI18N
        txaOutput.setRows(5);
        jScrollPane1.setViewportView(txaOutput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jButton1)
                .addContainerGap(92, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String gloss, manual, nmanual;
        nmanual = "0000000000000,000000000,0000000000";
        
        try {
            File folder = new File(System.getProperty("user.dir") + "\\resources\\crow");
//            File folder = new File(System.getProperty("user.dir"));
            File[] listOfFiles = folder.listFiles();
//            System.out.println(folder.getAbsolutePath());
            for (int i = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].getName().endsWith(".txt")&&listOfFiles[i].getName().contains("Sys")) {
                    inputFiles.add(listOfFiles[i]);
                }
            }
            
            String line;
            String textArea = "";
            for (int i = 0; i < inputFiles.size(); i++) //        int i=5;
            {
                //String[] tokensTwo = inputFiles.get(i).getName().split("_");
                
                    
                    line = readFile(inputFiles.get(i).getAbsolutePath());
                    System.out.println(line);
                    //line = line.substring(1, line.length());
                    Font HNSFont = null;

                    try {
                        HNSFont = java.awt.Font.createFont(java.awt.Font.TRUETYPE_FONT, new File("resources\\HamNoSys\\HamNoSysUnicode.ttf"));
                        HNSFont = HNSFont.deriveFont(Font.PLAIN, 20);
                        txaOutput.setFont(HNSFont);

                    } catch (FontFormatException | IOException ex) {
                        Logger.getLogger(TextToSign.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }
                    textArea+=line+'\n';
                    //glosses.add(gloss);
                    hamnosys.add(line);
    //                System.out.println("This is the text file line: " + line);
                
                
                txaOutput.setText(textArea);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TextToSign.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TextToSign.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        
        File file = new File("output.txt");
        try{
            FileOutputStream out = new FileOutputStream(file);
            PrintWriter writer = new PrintWriter(out);
            for(int k=0; k<hamnosys.size(); k++){
                writer.println(hamnosys.get(k)+'\t'+nmanual);
            }
            writer.close();
            out.close();
        }catch(Exception e){
            System.out.println("Error writing output.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private String readFile(String file) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
    //BufferedReader reader = new BufferedReader(new FileReader (file));
    String         line = null;
    StringBuilder  stringBuilder = new StringBuilder();
    //String         ls = System.getProperty("line.separator");

    try {
        while((line = reader.readLine()) != null) {
            stringBuilder.append(line);
        }
        //stringBuilder.append(ls);

        String output = stringBuilder.toString();
        output = new String(output.getBytes(),"UTF-8");
        return output;
    } finally {
        reader.close();
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestHamnosysFont.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestHamnosysFont.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestHamnosysFont.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestHamnosysFont.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestHamnosysFont().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txaOutput;
    // End of variables declaration//GEN-END:variables
}
