
//-------- js/AvSpeedController.js --------
// Generated by CoffeeScript 1.12.2
(function () {
    var AvSpeedController, console, cwaenv, document, log, setTimeout;
    cwaenv = this.getCWAEnv();
    console = this.console;
    document = this.document;
    setTimeout = this.setTimeout;
    log = console.log.bind(console);
    AvSpeedController = (function () {
        function AvSpeedController(domEls, seit) {
            this.SPEED_EL_IS_TEXT = Boolean(seit);
            this.displayEl = domEls.speedDisplay;
            this.downEl = domEls.speedDown;
            this.upEl = domEls.speedUp;
            this.resetEl = domEls.speedReset;
            this.stepsLo = -(2 * 6);
            this.stepsHi = 2 * 3;
            this._initGUI();
        }
        AvSpeedController.prototype._setElsValue = function (els, newval) {
            var el, i, len, results;
            results = [];
            for (i = 0, len = els.length; i < len; i++) {
                el = els[i];
                results.push(el.value = newval);
            }
            return results;
        };
        AvSpeedController.prototype._setElsOnclick = function (els, hdlr) {
            var el, i, len, results;
            results = [];
            for (i = 0, len = els.length; i < len; i++) {
                el = els[i];
                results.push(el.onclick = hdlr);
            }
            return results;
        };
        AvSpeedController.prototype._setElsDisabled = function (els, isDis) {
            var el, i, len, results;
            results = [];
            for (i = 0, len = els.length; i < len; i++) {
                el = els[i];
                results.push(el.disabled = isDis);
            }
            return results;
        };
        AvSpeedController.prototype._initGUI = function () {
            this._setElsOnclick(this.resetEl, ((function (_this) {
                return function (evt) {
                    return _this.reset();
                };
            })(this)));
            this._setElsOnclick(this.upEl, ((function (_this) {
                return function (evt) {
                    return _this.increase();
                };
            })(this)));
            this._setElsOnclick(this.downEl, ((function (_this) {
                return function (evt) {
                    return _this.decrease();
                };
            })(this)));
            return this.reset();
        };
        AvSpeedController.prototype._updateGUI = function () {
            var sstr;
            sstr = (this.nSteps / 2).toFixed(1);
            if (0 <= this.nSteps) {
                sstr = "+" + sstr;
            }
            if (this.SPEED_EL_IS_TEXT) {
                this._setElsValue(this.displayEl, sstr);
            } else {
                this.displayEl[0].innerHTML = sstr;
            }
            this._setElsDisabled(this.downEl, this.nSteps === this.stepsLo);
            this._setElsDisabled(this.upEl, this.nSteps === this.stepsHi);
            this._setElsDisabled(this.resetEl, this.nSteps === 0);
            return void 0;
        };
        AvSpeedController.prototype.curSpeed = function () {
            return Math.pow(2, this.nSteps / 2);
        };
        AvSpeedController.prototype.reset = function () {
            this.nSteps = 0;
            return this._updateGUI();
        };
        AvSpeedController.prototype.increase = function () {
            if (this.nSteps < this.stepsHi) {
                ++this.nSteps;
            }
            return this._updateGUI();
        };
        AvSpeedController.prototype.decrease = function () {
            if (this.stepsLo < this.nSteps) {
                --this.nSteps;
            }
            return this._updateGUI();
        };
        return AvSpeedController;
    })();
    cwaenv.add(AvSpeedController, "AvSpeedController");
}).call(this);