{"version":3,"sources":["webpack:///./src/app/synonyms/synonyms.component.ts","webpack:///./src/app/synonyms/synonyms.css","webpack:///./src/app/synonyms/synonyms.dialog.html","webpack:///./src/app/synonyms/synonyms.dialog.ts","webpack:///./src/app/synonyms/synonyms.html","webpack:///./src/app/synonyms/synonyms.module.ts","webpack:///./src/app/synonyms/synonyms.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwI;AAE5D;AAE1B;AAC2C;AAC7F,4CAA4C;AAC3B;AACjB,4CAA4C;AACyB;AAEM;AAE1B;AACE;AAMnD;;;GAGG;AACH;IAAA;IAOA,CAAC;IAAD,qBAAC;AAAD,CAAC;;AAED,sDAAsD;AACtD;IACE,4BACS,UAAmB,EAAS,IAAY,EAAS,KAAa,EAAS,IAAS,EAAS,EAAU,EAAS,MAAc;QAA1H,eAAU,GAAV,UAAU,CAAS;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAK;QAAS,OAAE,GAAF,EAAE,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IACzI,yBAAC;AAAD,CAAC;;AAeD;;;;;;GAMG;AAEH;IAWE,sBAAqB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAV/B,eAAU,GAAG,IAAI,oDAAe,CAAmB,EAAE,CAAC,CAAC;QAIvD,YAAO,GAAG,6BAA6B,CAAC;QAExC,SAAI,GAAG,OAAO,CAAC;QAEf,UAAK,GAAC,EAAE,CAAC;QAGP,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAVD,sBAAI,8BAAI;aAAR,cAA+B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAY9D,iCAAU,GAAV;QAAA,iBAgBC;QAdC,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAE3B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACjC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,4CAA4C;YAC3C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,uCAAuC;YACzC,CAAC;QACH,CAAC,EACD,eAAK;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAO,GAAP,UAAQ,MAAM;QACZ,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAAC,CAAC;QACpE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;aAC/B,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACtD,CAAC;IAEM,iCAAU,GAAjB,UAAkB,KAAU;QAC1B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,GAAG,IAAI,GAAG,CAAC;YACX,IAAM,MAAM,GAAa,EAAE,CAAC;YAC5B,iCAAiC;YACjC,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;gBACxB,IAAM,KAAK,GAA8B,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpD,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,IAAI,CAAI,GAAG,SAAI,KAAO,CAAC,CAAC;gBACjC,CAAC;YACH,CAAC;YACD,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAvDU,YAAY;QADxB,gEAAU,EAAE;yCAYgB,kDAAI;OAXpB,YAAY,CAwDxB;IAAD,mBAAC;CAAA;AAxDwB;AAsEzB;IAmCE,2BAAoB,QAAsB,EAC/B,QAAmB,EAClB,gBAAiC,EAClC,MAAiB;QAH5B,iBAWE;QAXkB,aAAQ,GAAR,QAAQ,CAAc;QAC/B,aAAQ,GAAR,QAAQ,CAAW;QAClB,qBAAgB,GAAhB,gBAAgB,CAAiB;QAClC,WAAM,GAAN,MAAM,CAAW;QAnC5B,cAAS,GAAG,KAAK,CAAC;QAElB,oBAAe,GAAG,EAAE,CAAC;QAGrB,SAAI,GAAG,OAAO,CAAC;QAEf,aAAQ,GAAC,EAAE,CAAC;QAIZ,WAAM,GAAoC,EAAE,CAAC;QAE7C,UAAK,GAAQ;YACX,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,EAA3B,CAA2B;YAChD,KAAK,EAAE,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,EAA5B,CAA4B;SAC/C,CAAC;QASF,gBAAW,GAAU,EAAE,CAAC;QAGxB,WAAM,GAAC,EAAE,CAAC;QACV,SAAI,GAAU,EAAE,CAAC;QAejB,oBAAe,GAAG,UAAC,YAAwB;YACzC,gDAAgD;YAChD,KAAI,CAAC,YAAY,IAAI,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;YACxG,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;YAC3E,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC;QAmBD,gBAAW,GAAG,UAAC,IAAoB,EAAE,KAAa;YAChD,MAAM,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACpG,CAAC;QAEO,cAAS,GAAG,UAAC,IAAwB,IAAK,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC;QAErD,kBAAa,GAAG,UAAC,IAAwB,IAAK,WAAI,CAAC,UAAU,EAAf,CAAe,CAAC;QAE9D,iBAAY,GAAG,UAAC,IAAoB;YAC1C,MAAM,CAAC,+CAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;QAED,aAAQ,GAAG,UAAC,CAAS,EAAE,SAA6B,IAAK,gBAAS,CAAC,UAAU,EAApB,CAAoB,CAAC;QA7C1E,IAAI,CAAC,aAAa,GAAG,IAAI,uEAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAC1E,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,iEAAe,CAAqB,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/F,IAAI,CAAC,UAAU,GAAG,IAAI,4EAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAClF,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,cAAI;YAChC,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACN,CAAC;IASF,8CAAkB,GAAlB;QAAA,iBAcC;QAbC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,SAAS;YAC/B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACxD,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,EAAE;oBACrD,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE;oBACtE,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAE,SAAS,CAAC,aAAa,CAAE,CAAC,CAAC;YAC1E,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAC,OAAO,IAAK,eAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACtF,CAAC;IAiBD,oCAAQ,GAAR;IAEA,CAAC;IAED,oCAAQ,GAAR,UAAS,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAI;QAAb,iBAQC;QAPC,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAU,GAAV,UAAY,CAAM;QAAlB,iBAcC;QAbC,EAAE,CAAC,CAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAC,CAAC,CAAC,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,MAAM,GAAC,EAAE,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAC,CAAC,CAAC,MAAM,CAAC;YACvB,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,EAAE,CAAC;YACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3C,KAAI,CAAC,IAAI,GAAC,IAAI,CAAC;YACjB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAU,GAAV;QAAA,iBAgBC;QAfC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+DAAc,EAAE;YACjD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAG,QAAQ,EAAE,EAAE,EAAC;SACvB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,MAAM,CAAC,GAAC,MAAM,CAAC;gBACtB,MAAM,CAAC,MAAM,CAAC,GAAE,KAAI,CAAC,MAAM,CAAC;gBAC5B,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;oBACpC,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;wBACjB,KAAI,CAAC,QAAQ,EAAE,CAAC;oBACjB,CAAC;gBACJ,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,KAAG,EAAE,CAAC;IAC1B,CAAC;IAED,wCAAY,GAAZ,UAAa,MAAM;QACjB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,wCAAY,GAAZ,UAAa,EAAE;QACb,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,uCAAW,GAAX,UAAY,EAAE;QAAd,iBAiBC;QAhBC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACjD,IAAM,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+DAAc,EAAE;gBACjD,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,GAAG,CAAC,UAAU,CAAC,EAAC;aACjD,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;gBACtC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;oBACd,MAAM,CAAC,IAAI,CAAC,GAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACvB,MAAM,CAAC,MAAM,CAAC,GAAE,KAAI,CAAC,MAAM,CAAC;oBAC5B,MAAM,CAAC,MAAM,CAAC,GAAC,QAAQ,CAAC;oBACxB,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;wBACrC,KAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QAAhB,iBAQC;QAPC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACpD,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IA5KuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;wDAAC;IAeG;QAAhD,kEAAY,CAAC,kEAAW,EAAE,EAAE,IAAI,EAAE,wDAAU,EAAE,CAAC;;wDAAyB;IA3B9D,iBAAiB;QAX7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAC,YAAY,CAAC;YACzB,uDAAuD;YACvD,IAAI,EAAE;gBACJ,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC;yCAqC8B,YAAY;YACrB,uDAAS;YACA,iEAAe;YAC1B,2DAAS;OAtCjB,iBAAiB,CAyL7B;IAAD,wBAAC;CAAA;AAzL6B;;;;;;;;;;;;AClI9B,qCAAqC,6CAA6C,iBAAiB,IAAI,kBAAkB,sBAAsB,kBAAkB,iBAAiB,GAAG,eAAe,2BAA2B,gBAAgB,iBAAiB,qBAAqB,kBAAkB,wBAAwB,4BAA4B,oBAAoB,eAAe,uBAAuB,iBAAiB,gBAAgB,iBAAiB,GAAG,kBAAkB,mBAAmB,aAAa,uBAAuB,GAAG,mBAAmB,kBAAkB,2BAA2B,GAAG,qBAAqB,gBAAgB,GAAG,aAAa,kBAAkB,wBAAwB,GAAG,2CAA2C,gBAAgB,4BAA4B,YAAY,gCAAgC,YAAY,gCAAgC,MAAM,yBAAyB,SAAS,4CAA4C,wBAAwB,YAAY,4CAA4C,wBAAwB,eAAe,uBAAuB,4CAA4C,0BAA0B,aAAa,4CAA4C,0BAA0B,cAAc,iBAAiB,kBAAkB,2BAA2B,4CAA4C,wBAAwB,0BAA0B,uBAAuB,0BAA0B,uBAAuB,qBAAqB,uBAAuB,2BAA2B,GAAG,cAAc,0CAA0C,0DAA0D,+XAA+X,wBAAwB,uBAAuB,GAAG,yBAAyB,gCAAgC,GAAG,mBAAmB,uBAAuB,GAAG,eAAe,sBAAsB,GAAG,cAAc,qBAAqB,GAAG,G;;;;;;;;;;;ACA3vE,ob;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiD;AAC0B;AAO3E;IACE,wBACS,SAA0C,EACjB,IAAkB;QAD3C,cAAS,GAAT,SAAS,CAAiC;QACjB,SAAI,GAAJ,IAAI,CAAc;IAAG,CAAC;IAEtD,+BAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAPQ,cAAc;QAJ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;SAE5B,CAAC;QAIG,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY;OAFrB,cAAc,CAQ1B;IAAD,qBAAC;CAAA;AAR0B;;;;;;;;;;;;ACR3B,ytCAAytC,WAAW,mIAAmI,0TAA0T,gEAAgE,0IAA0I,WAAW,mWAAmW,0EAA0E,uDAAuD,kBAAkB,KAAK,eAAe,i6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv1E;AACc;AACR;AACmB;AAEV;AAC+E;AAChF;AACE;AACI;AACJ;AACd;AACY;AACA;AACC;AACL;AACF;AAEyE;AAE1H,IAAM,gCAAgC,GAAoC;IACxE,gBAAgB,EAAE,IAAI;CACvB,CAAC;AAGF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE;CAC3C,CAAC;AAoCF;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAlC1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,oEAAkB;gBAClB,sEAAc;gBACd,qEAAa;gBACb,qEAAgB;gBAChB,+DAAa;gBACb,oEAAa;gBACb,+DAAa;gBACb,iEAAe;gBACf,qEAAa;gBACb,iEAAe;gBACf,0EAAgB;gBAChB,yDAAU;gBACV,iEAAe;gBACf,6EAAsB;gBACtB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,EAAC,gEAAc,CAAC;YAChD,eAAe,EAAE;gBACf,gEAAc;aACf;YACD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,+EAAwB;oBACjC,QAAQ,EAAE,gCAAgC;iBAC3C;gBACD,kEAAe;aAChB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DgB;AAC8C;AAC3C;AACF;AAG5C,IAAM,iBAAiB,GAAG,MAAM,CAAC;AAGjC;IACE,yBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IACrC,CAAC;IACD,uCAAa,GAAb,UAAc,EAAE;QACd,IAAM,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAQ,iBAAiB,GAAG,yBAAyB,EAAC;YACzE,MAAM,EAAE,UAAU;SACnB,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC;YACf,MAAM,CAAC,IAAI,+CAAU,CAAC,UAAC,UAA6B;gBAClD,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IACD,wCAAc,GAAd,UAAe,EAAE;QACf,IAAM,GAAG,GAAG,iBAAiB,GAAG,wBAAwB,CAAC;QACzD,IAAM,UAAU,GAAG,IAAI,+DAAU,EAAE;aAChC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;aACb,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACzB,IAAM,WAAW,GAAG;YAClB,MAAM,EAAE,UAAU;SACnB,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,GAAG,CAAC,UAAC,GAAsB,IAAK,UAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAC3F,CAAC;IACD,qCAAW,GAAX,UAAY,EAAE;QACZ,IAAM,GAAG,GAAG,iBAAiB,GAAG,wBAAwB,CAAC;QACzD,IAAM,UAAU,GAAG,IAAI,+DAAU,EAAE;aAChC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACjB,IAAM,WAAW,GAAG;YAClB,MAAM,EAAE,UAAU;SACnB,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,GAAG,CAAC,UAAC,GAA+B,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC;IACxF,CAAC;IACD,sCAAY,GAAZ,UAAa,MAAM;QACjB,IAAM,OAAO,GAAG,iBAAiB,GAAG,yBAAyB,CAAC;QAC9D,IAAM,UAAU,GAAG,IAAI,+DAAU,EAAE;aAChC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC;aACpB,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC;aACxB,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC;aACxB,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,mCAAmC;aACpD,CAAC;SACH,CAAC;QACJ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC,GAAG,CAAC,UAAC,GAAsB,IAAK,UAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvH,CAAC;IA7CU,eAAe;QAD3B,gEAAU,EAAE;yCAEgB,+DAAU;OAD1B,eAAe,CA8C3B;IAAD,sBAAC;CAAA;AA9C2B","file":"synonyms-synonyms-module.js","sourcesContent":["import { Component, Input, ViewChild, Injectable , Inject, ElementRef, Renderer2 , ViewChildren,ViewEncapsulation} from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Http, Response, Headers, RequestOptionsArgs } from '@angular/http';\nimport { URLSearchParams } from '@angular/http';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener , MatTreeNode} from '@angular/material/tree';\n// tslint:disable-next-line:import-blacklist\nimport 'rxjs/Rx';\n// tslint:disable-next-line:import-blacklist\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\nimport { PerfectScrollbarConfigInterface, PerfectScrollbarComponent, PerfectScrollbarDirective } from 'ngx-perfect-scrollbar';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport {SynonymsDialog} from './synonyms.dialog';\nimport {SynonymsService} from './synonyms.service';\n\ndeclare var document: any;\n\ndeclare var navigator: any;\n\n/**\n * File node data with nested structure.\n * Each node has a filename, and a type or a list of children.\n */\nexport class DictionaryNode {\n  id: string;\n  expandable: boolean;\n  children: DictionaryNode[];\n  name: string;\n  type: any;\n  parent: string;\n}\n\n/** Flat node with expandable and level information */\nexport class DictionaryFlatNode {\n  constructor(\n    public expandable: boolean, public name: string, public level: number, public type: any, public id: string, public parent: string) {}\n}\n\nexport interface CategoryData {\n  id: string;\n  name: string;\n  lang: string;\n}\n\nexport interface SynonymsData {\n  id: string;\n  word: string;\n  synonyms: string;\n}\n\n\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class FileDatabase {\n  dataChange = new BehaviorSubject<DictionaryNode[]>([]);\n\n  get data(): DictionaryNode[] { return this.dataChange.value; }\n\n  treeUrl = '/api/dictionary/getCategory';\n\n  lang = 'zh_cn';\n\n  sigml='';\n\n  constructor( private http: Http) {\n    this.initialize();\n  }\n\n  initialize() {\n\n    const params = {};\n    params['lang'] = this.lang;\n\n    this.getData(params).subscribe(data => {\n      if (data.success) {\n        this.dataChange.next(data.result);\n     //   this.quickStatData.value = data.result;\n      } else {\n        // this.errorDiagnostic = data.message;\n      }\n    },\n    error => {\n\n    });\n  }\n\n  getData(params) {\n    let paramString = '';\n    if (params !== undefined) { paramString = this.buildQuery(params); }\n    return this.http.get(this.treeUrl + paramString)\n                    .map((res: Response) => res.json());\n  }\n\n  public buildQuery(query: any): string {\n    let url = '';\n    if (query) {\n      url += '?';\n      const params: string[] = [];\n      // tslint:disable-next-line:forin\n      for (const key in query) {\n        const value: string | number | boolean = query[key];\n        if (value !== undefined) {\n          params.push(`${key}=${value}`);\n        }\n      }\n      url += params.join('&');\n    }\n    return url;\n  }\n}\n\n\n@Component({\n  selector: 'synonyms-comp',\n  templateUrl: 'synonyms.html',\n  styleUrls: ['synonyms.css'],\n  providers: [FileDatabase],\n  // tslint:disable-next-line:use-host-property-decorator\n  host: {\n    style: 'flex:1'\n  }\n})\n\nexport class SynonymsComponent {\n  form: FormGroup;\n\n  submitted = false;\n\n  errorDiagnostic = '';\n\n\n  lang = 'zh_cn';\n\n  category='';\n\n  @ViewChild('hansField') hansField: ElementRef;\n\n  config: PerfectScrollbarConfigInterface = {};\n\n  props: any = {\n    lang: 'cmn-Hans-CN',\n    onChange: (value) => console.log(value + '====') ,\n    onEnd: (value) => console.log(value + '#####')\n  };\n\n\n  treeControl: FlatTreeControl<DictionaryFlatNode>;\n  treeFlattener: MatTreeFlattener<DictionaryNode, DictionaryFlatNode>;\n  dataSource: MatTreeFlatDataSource<DictionaryNode, DictionaryFlatNode>;\n\n  @ViewChildren(MatTreeNode, { read: ElementRef }) treeNodes: ElementRef[];\n\n  hasListener: any[] = [];\n  oldHighlight: ElementRef;\n  sigml: any;\n  wordId='';\n  data: any[] = [];\n\n  constructor(private database: FileDatabase ,\n     private renderer: Renderer2,\n      private _synonymsService: SynonymsService,\n      public dialog: MatDialog) {\n      this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\n      this._isExpandable, this._getChildren);\n      this.treeControl = new FlatTreeControl<DictionaryFlatNode>(this._getLevel, this._isExpandable);\n      this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n      database.dataChange.subscribe(data => {\n        this.dataSource.data = data;\n      });\n   }\n\n  updateHighlight = (newHighlight: ElementRef) => {\n    // tslint:disable-next-line:no-unused-expression\n    this.oldHighlight && this.renderer.removeClass(this.oldHighlight.nativeElement, 'background-highlight');\n    this.renderer.addClass(newHighlight.nativeElement, 'background-highlight');\n    this.oldHighlight = newHighlight;\n  }\n\n  ngAfterViewChecked() {\n    this.treeNodes.forEach((reference) => {\n      if (!this.hasListener.includes(reference.nativeElement)) {\n        this.renderer.listen(reference.nativeElement, 'click', () => {\n          this.updateHighlight(reference);\n        });\n        this.renderer.listen(reference.nativeElement.children.item(0), 'click', () => {\n          this.updateHighlight(reference);\n        });\n\n        this.hasListener = this.hasListener.concat([ reference.nativeElement ]);\n      }\n    });\n    this.hasListener = this.hasListener.filter((element) => document.contains(element));\n  }\n\n\n  transformer = (node: DictionaryNode, level: number) => {\n    return new DictionaryFlatNode(node.expandable, node.name, level, node.type, node.id, node.parent);\n  }\n\n  private _getLevel = (node: DictionaryFlatNode) => node.level;\n\n  private _isExpandable = (node: DictionaryFlatNode) => node.expandable;\n\n  private _getChildren = (node: DictionaryNode): Observable<DictionaryNode[]> => {\n    return observableOf(node.children);\n  }\n\n  hasChild = (_: number, _nodeData: DictionaryFlatNode) => _nodeData.expandable;\n\n  ngOnInit(): void {\n\n  }\n\n  onSelect(e) {\n    this.lang = e.value;\n    this.dataSource.data = [];\n    this.loadTree (this.lang);\n  }\n\n  loadTree(lang) {\n    const params = {};\n    params['lang'] = lang;\n    this.database.getData(params).subscribe(data => {\n      if (data.success) {\n        this.database.dataChange.next(data.result);\n      }\n    });\n  }\n\n  nodeSelect (e: any ): void {\n    if ( e.type === 'category') {\n      this.category=e.id;\n      this.wordId='';\n      this.data=[];\n    } else {\n      const params={};\n      params['id']=e.id;\n      this.category=e.parent;\n      this.wordId=e.id;\n      this.listSynonyms(this.wordId).subscribe(data => {\n        this.data=data;\n      });\n    }\n  }\n\n  loadData(){\n    this.listSynonyms(this.wordId).subscribe(data => {\n      this.data=data;\n    });\n  }\n  openDialog () {\n    const dialogRef = this.dialog.open(SynonymsDialog, {\n      width: '650px',\n      data: {  synonyms: ''}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        result['type']='save';\n        result['word']= this.wordId;\n        this.postSynonyms(result).subscribe(res => {\n           if (res.success) {\n            this.loadData();\n           }\n        });\n      }\n    });\n  }\n\n  buttonEnable(){\n    return this.wordId==='';\n  }\n\n  postSynonyms(params) {\n    return this._synonymsService.postSynonyms(params);\n  }\n\n  listSynonyms(id) {\n    return this._synonymsService.querySynonyms(id);\n  }\n\n  editSynonym(id){\n    this._synonymsService.getSynonyms(id).subscribe(res => {\n      const dialogRef = this.dialog.open(SynonymsDialog, {\n        width: '650px',\n        data: { id: res['id'],synonyms: res['synonyms']}\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result.id) {\n          result['id']=res['id'];\n          result['word']= this.wordId;\n          result['type']='update';\n          this.postSynonyms(result).subscribe(res => {\n            this.loadData();\n          });\n        }\n      });\n   });\n  }\n\n  deleteSynonym(id){\n    this._synonymsService.deleteSynonyms(id).subscribe(res => {\n      if (res.success) {\n        this.loadData();\n      } else {\n        console.log(res['message']);\n      }\n   });\n  }\n}\n\n\n","module.exports = \"@charset \\\"UTF-8\\\";\\n/* CSS Document */\\n/* tab pane */\\n:host {  \\n\\twidth:100%;\\n }\\n.container div {\\n  min-height: 150px;\\n  padding: 10px;\\n  margin: 10px;\\n}\\n.fab-button {\\n  box-sizing: border-box;\\n  width: 55px;\\n  height: 55px;\\n  text-align: left;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n  z-index: 9;\\n  position: absolute;\\n  bottom: 40px;\\n  right: 40px;\\n  color: white;\\n}\\n.fab-item-icon {\\n  color: white\\n}\\n.rows div {\\n  padding-left: 10px;\\n}\\n.form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.form-container>* {\\n  width: 100%;\\n}\\n.col-md-2 {\\n  display: flex;\\n  flex-direction: row;\\n}\\na:link,\\na:visited,\\na:hover,\\na:active {\\n  color: #f00;\\n  text-decoration: none\\n}\\n.stripe1 {\\n  background-color: #DDDDDD\\n}\\n.stripe2 {\\n  background-color: #CCEEFF\\n}\\ntd {\\n  text-align: center\\n}\\na.ham {\\n  font-family: \\\"hamnosysunicoderegular\\\";\\n  font-size: larger\\n}\\nspan.ham {\\n  font-family: \\\"hamnosysunicoderegular\\\";\\n  font-size: larger\\n}\\n#hamcaption {\\n  text-align: center;\\n  font-family: \\\"hamnosysunicoderegular\\\";\\n  font-size: xx-large\\n}\\ninput.ham {\\n  font-family: \\\"hamnosysunicoderegular\\\";\\n  font-size: xx-large\\n}\\nbutton.ham {\\n  width: 1.3em;\\n  height: 1.3em;\\n  background-color: #ddd;\\n  font-family: \\\"hamnosysunicoderegular\\\";\\n  font-size: xx-large;\\n  display: inline-block;\\n  position: relative;\\n  text-decoration: none;\\n  text-align: center;\\n  font-weight: 700;\\n  border-radius: 4px;\\n  border: 1px solid #666;\\n}\\n@font-face {\\n  font-family: 'hamnosysunicoderegular';\\n  src: url('/assets/fonts/hamnosysunicode-webfont.eot');\\n  src: url('/assets/fonts/hamnosysunicode-webfont.eot?#iefix') format('embedded-opentype'), url('/assets/fonts/hamnosysunicode-webfont.woff2') format('woff2'), url('/assets/fonts/hamnosysunicode-webfont.woff') format('woff'), url('/assets/fonts/hamnosysunicode-webfont.ttf') format('truetype'), url('/assets/fonts/hamnosysunicode-webfont.svg#hamnosysunicoderegular') format('svg');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n.background-highlight {\\n  background-color: lightgrey;\\n}\\n.mat-form-field {\\n  font-size: initial;\\n}\\n.left-title {\\n  margin-left: 24px;\\n}\\n.left-card {\\n  margin-left: 4px;\\n}\\n\"","module.exports = \"<h1 mat-dialog-title>同义词管理</h1>\\n<div mat-dialog-content>\\n  <div fxLayout=\\\"column\\\" >\\n        <mat-form-field fxFlexFill>\\n          <input matInput placeholder=\\\"同义词\\\" [(ngModel)]=\\\"data.synonyms\\\"/>\\n        </mat-form-field>\\n    </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"cancel()\\\">取消</button>\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>保存</button>\\n</div>\"","import { Component, Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {SynonymsComponent, SynonymsData} from './synonyms.component';\n\n@Component({\n  selector: 'synonyms-dialog',\n  templateUrl: 'synonyms.dialog.html',\n})\nexport class SynonymsDialog {\n  constructor(\n    public dialogRef: MatDialogRef<SynonymsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: SynonymsData) {}\n\n    cancel(): void {\n      this.dialogRef.close();\n    }\n}\n","module.exports = \"<div fxFlexFill fxLayout=\\\"row\\\" fxLayoutGap='10px'>\\n    <mat-card fxFlex=\\\"16\\\" fxFlexFill fxLayout='column' style=\\\"padding: 5px\\\">\\n       <mat-card-title>\\n         <div class='left-title'>\\n          <mat-form-field>\\n            <mat-select [(value)]=\\\"lang\\\" (selectionChange)='onSelect($event)'>\\n              <mat-option value=\\\"zh_cn\\\">中文</mat-option>\\n              <mat-option value=\\\"en_us\\\">美国英语</mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        </div>\\n        <mat-divider></mat-divider>\\n      </mat-card-title> \\n      <mat-card-content  >\\n          <perfect-scrollbar  class=\\\"scroll-container\\\" \\n                          fxFlex=\\\"auto\\\" \\n                          [config]=\\\"config\\\" \\n                          [scrollIndicators]=\\\"true\\\"> \\n                          <div align=\\\"center\\\" fxFlexFill >\\n                              <mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n                                  <mat-tree-node *matTreeNodeDef=\\\"let node\\\"  matTreeNodeToggle matTreeNodePadding (click)=\\\"nodeSelect(node)\\\" >\\n                                    <button mat-icon-button disabled></button>\\n                                    {{node.name}} \\n                                  </mat-tree-node>\\n                                  <mat-tree-node *matTreeNodeDef=\\\"let node;when: hasChild\\\" matTreeNodePadding (click)=\\\"nodeSelect(node)\\\">\\n                                    <button mat-icon-button matTreeNodeToggle  [attr.aria-label]=\\\"'toggle ' + node.name\\\">\\n                                      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n                                      </mat-icon>\\n                                    </button>\\n                                    {{node.name}} \\n                                  </mat-tree-node>\\n                                </mat-tree>\\n                          </div>\\n            </perfect-scrollbar> \\n      </mat-card-content>\\n    </mat-card>\\n    <div fxFlex=\\\"84\\\" fxLayout=\\\"row\\\" fxLayoutGap='10px'>\\n        <mat-card *ngFor=\\\"let item of data\\\" fxFlex=\\\"16\\\" style=\\\"padding: 5px;height:50px\\\">\\n            <mat-card-content  style=\\\"padding-left: 12px;display:flex\\\">\\n                <span  style=\\\"flex:1;padding-top: 10px;\\\">{{item.synonyms}}</span>\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                    <mat-icon>more_vert</mat-icon>\\n                  </button>\\n                  <mat-menu #menu=\\\"matMenu\\\">\\n                    <button mat-menu-item (click)=\\\"deleteSynonym(item.id)\\\">\\n                      <mat-icon>delete</mat-icon>\\n                      <span>删除</span>\\n                    </button>\\n                    <button mat-menu-item (click)=\\\"editSynonym(item.id)\\\">\\n                      <mat-icon>create</mat-icon>\\n                      <span>修改</span>\\n                    </button>\\n                  </mat-menu>\\n           </mat-card-content> \\n         </mat-card>\\n    </div>\\n    <div class=\\\"fab-button\\\">\\n       <button mat-fab [disabled]='buttonEnable()'>\\n        <mat-icon color=\\\"accent\\\" class=\\\"fab-item-icon\\\"  (click)=\\\"openDialog()\\\">add</mat-icon>\\n      </button>\\n    </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule, MatButtonModule, MatSelectModule, MatDialogModule, MatFormFieldModule,MatMenuModule } from '@angular/material';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SynonymsComponent } from './synonyms.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpModule } from '@angular/http';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\nimport {SynonymsService} from './synonyms.service';\nimport {SynonymsDialog} from './synonyms.dialog';\n\nimport { PerfectScrollbarModule, PerfectScrollbarConfigInterface, PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  wheelPropagation: true\n};\n\n\nconst routes: Routes = [\n  { path: '', component: SynonymsComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatTabsModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatDividerModule,\n    HttpModule,\n    MatDialogModule,\n    PerfectScrollbarModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SynonymsComponent,SynonymsDialog],\n  entryComponents: [\n    SynonymsDialog\n  ],\n  providers: [\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n    },\n    SynonymsService\n  ]\n})\nexport class SynonymsModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { SynonymsData } from './synonyms.component';\r\n\r\nconst INTERNAL_DOCS_URL = '/api';\r\n\r\n@Injectable()\r\nexport class SynonymsService {\r\n  constructor(private _http: HttpClient) {\r\n  }\r\n  querySynonyms(id): Observable<any[]> {\r\n    const httpParams = new HttpParams().set('word', id);\r\n    return this._http.get<any[]>(INTERNAL_DOCS_URL + '/dictionary/listSynonym',{\r\n      params: httpParams\r\n    }).pipe(catchError(() => {\r\n        return new Observable((subscriber: Subscriber<any[]>) => {\r\n          subscriber.next([]);\r\n        });\r\n      }));\r\n  }\r\n  deleteSynonyms(id) {\r\n    const url = INTERNAL_DOCS_URL + '/dictionary/getSynonym';\r\n    const httpParams = new HttpParams()\r\n      .set('id', id)\r\n      .set('type', 'delete');\r\n    const httpOptions = {\r\n      params: httpParams\r\n    };\r\n    return this._http.get(url, httpOptions).map((res: HttpResponse<any>) => res.body.json());\r\n  }\r\n  getSynonyms(id) {\r\n    const url = INTERNAL_DOCS_URL + '/dictionary/getSynonym';\r\n    const httpParams = new HttpParams()\r\n      .set('id', id);\r\n    const httpOptions = {\r\n      params: httpParams\r\n    };\r\n    return this._http.get(url, httpOptions).map((res: HttpResponse<SynonymsData>) => res);\r\n  }\r\n  postSynonyms(params) {\r\n    const postUrl = INTERNAL_DOCS_URL + '/dictionary/postSynonym';\r\n    const httpParams = new HttpParams()\r\n      .set('id', params.id)\r\n      .set('type', params.type)\r\n      .set('word', params.word)\r\n      .set('synonyms', params.synonyms);\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        })\r\n      };\r\n    return this._http.post(postUrl, httpParams.toString(), httpOptions).map((res: HttpResponse<any>) => res.body.json());\r\n  }\r\n}\r\n"],"sourceRoot":""}