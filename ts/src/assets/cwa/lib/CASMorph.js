//-------- js/CASMorph.js --------
// Generated by CoffeeScript 1.12.2
(function () {
    var CASMorph, FourCC, console, cwaenv, document, log, setTimeout;
    cwaenv = this.getCWAEnv();
    console = this.console;
    document = this.document;
    setTimeout = this.setTimeout;
    log = console.log.bind(console);
    FourCC = cwaenv.get("FourCC");
    CASMorph = (function () {
        function CASMorph() {
            this.fourCCName = 0;
            this.amount = 0;
        }
        CASMorph.NO_MORPHS = [];
        CASMorph.fromJSON = function (jsnmorph) {
            var morph;
            morph = new CASMorph;
            morph.setFromJSON(jsnmorph);
            return morph;
        };
        CASMorph.fromXML = function (mrphel) {
            var morph;
            morph = new CASMorph;
            morph.setFromXML(mrphel);
            return morph;
        };
        CASMorph.fromBin = function (avdv) {
            var morph;
            morph = new CASMorph;
            morph.setFromBin(avdv);
            return morph;
        };
        CASMorph.create = function (name4cc, value) {
            var morph;
            morph = new CASMorph;
            morph.set(name4cc, value);
            return morph;
        };
        CASMorph.createFromStr = function (name4ccstr, value) {
            var morph;
            morph = new CASMorph;
            morph.setFromStr(name4ccstr, value);
            return morph;
        };
        CASMorph.prototype.setFromJSON = function (jsnmrph) {
            this.fourCCName = FourCC.fourCCInt(jsnmrph.id4cc);
            return this.amount = jsnmrph.amount;
        };
        CASMorph.prototype.setFromXML = function (mrphel) {
            return this.setFromStr(mrphel.getAttribute("name"), Number(mrphel.getAttribute("amount")));
        };
        CASMorph.prototype.setFromBin = function (avdv) {
            this.fourCCName = avdv.nextUint();
            return this.amount = avdv.nextFloat();
        };
        CASMorph.prototype.setFromStr = function (name, value) {
            return this.set(FourCC.fourCCInt(name), value);
        };
        CASMorph.prototype.set = function (name4cc, value) {
            this.fourCCName = name4cc;
            return this.amount = value;
        };
        CASMorph.prototype.setFromMorph = function (morph) {
            this.fourCCName = morph.getName();
            return this.amount = morph.getAmount();
        };
        CASMorph.prototype.hasName = function (nm4cc) {
            return this.fourCCName === nm4cc;
        };
        CASMorph.prototype.getName = function () {
            return this.fourCCName;
        };
        CASMorph.prototype.getFourCC = function () {
            return this.fourCCName;
        };
        CASMorph.prototype.getFourCCStr = function () {
            return FourCC.fourCCStr(this.fourCCName);
        };
        CASMorph.prototype.getAmount = function () {
            return this.amount;
        };
        CASMorph.prototype._makeText = function (amtstr) {
            var NX, nmstr, pad;
            nmstr = FourCC.fourCCString(this.fourCCName);
            NX = 4 - nmstr.length;
            pad = 0 < NX ? "    ".slice(0, NX) : "";
            return "" + nmstr + pad + "  " + this.amtstr;
        };
        CASMorph.prototype.asText = function () {
            return this._makeText("" + this.amount);
        };
        CASMorph.prototype.asText4 = function () {
            return this._makeText("" + (this.amount.toFixed(4)));
        };
        return CASMorph;
    })();
    cwaenv.add(CASMorph, "CASMorph");
}).call(this);