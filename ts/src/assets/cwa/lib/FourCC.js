//-------- js/FourCC.js --------
// Generated by CoffeeScript 1.12.2
(function () {
    var FourCC, console, cwaenv, document, log, setTimeout;
    cwaenv = this.getCWAEnv();
    console = this.console;
    document = this.document;
    setTimeout = this.setTimeout;
    log = console.log.bind(console);
    FourCC = (function () {
        var _i2s, _s2i;

        function FourCC() {
            throw "FourCC cannot be instantiated.";
        }
        FourCC.fourCCInt = function (str4) {
            var cc0, cc1, cc2, cc3, has4, s;
            has4 = 4 <= str4.length;
            s = has4 ? str4 : str4 + String.fromCharCode(0, 0, 0, 0);
            cc0 = s.charCodeAt(0) & 0xFF;
            cc1 = s.charCodeAt(1) & 0xFF;
            cc2 = s.charCodeAt(2) & 0xFF;
            cc3 = s.charCodeAt(3) & 0xFF;
            return (((((cc3 << 8) | cc2) << 8) | cc1) << 8) | cc0;
        };
        FourCC.fourCCStr = function (id4cc) {
            var cc0, cc1, cc2, cc3, chs, chvec, i;
            chs = id4cc;
            cc0 = chs & 0xFF;
            chs >>= 8;
            cc1 = chs & 0xFF;
            chs >>= 8;
            cc2 = chs & 0xFF;
            chs >>= 8;
            cc3 = chs & 0xFF;
            if (cc3 !== 0) {
                return String.fromCharCode(cc0, cc1, cc2, cc3);
            } else {
                chvec = [cc0, cc1, cc2, cc3];
                i = 0;
                while (chvec[i]) {
                    ++i;
                }
                return String.fromCharCode.apply(null, chvec.slice(0, i));
            }
        };
        _s2i = function (fccs, ix, vec) {
            return FourCC.fourCCInt(fccs);
        };
        _i2s = function (fcci, ix, vec) {
            return FourCC.fourCCStr(fcci);
        };
        FourCC.fourCCStrsToInts = function (fccss) {
            return fccss.map(_s2i);
        };
        FourCC.fourCCIntsToStrs = function (fccis) {
            return fccis.map(_i2s);
        };
        FourCC.fourCCStrPadded = function (id4cc) {
            var s;
            s = this.fourCCStr(id4cc);
            while (s.length !== 4) {
                s += " ";
            }
            return s;
        };
        return FourCC;
    })();
    cwaenv.add(FourCC, "FourCC");
}).call(this);