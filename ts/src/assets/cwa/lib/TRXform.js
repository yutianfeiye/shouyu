//-------- js/TRXform.js --------
// Generated by CoffeeScript 1.12.2
(function () {
    var RQ, TRXform, V3, console, cwaenv, document, log, setTimeout;
    cwaenv = this.getCWAEnv();
    console = this.console;
    document = this.document;
    setTimeout = this.setTimeout;
    log = console.log.bind(console);
    V3 = cwaenv.get("E3Vec");
    RQ = cwaenv.get("RotQuat");
    TRXform = (function () {
        var TRX;

        function TRXform(_t, _r) {
            this._t = _t;
            this._r = _r;
        }
        TRX = TRXform;
        TRXform.fromTRX = function (trx) {
            return this.fromTR(trx._t, trx._r);
        };
        TRXform.fromTR = function (t, r) {
            return this.fromTRV(t.xyz, r.xyzw);
        };
        TRXform.fromTRV = function (tv, rv) {
            var r, ref, t;
            ref = [V3.fromV3(tv), RQ.fromQV(rv)], t = ref[0], r = ref[1];
            return new TRX(t, r);
        };
        TRXform.create = function () {
            return new TRX(V3.create(), new RQ);
        };
        TRXform.setMat4x4Rot = function (m, r) {
            return r.toRotMat4x4(m);
        };
        TRXform.setMat4x4Trans = function (m, t) {
            var ref, x, y, z;
            ref = t.xyz, x = ref[0], y = ref[1], z = ref[2];
            m[12] = x;
            m[13] = y;
            m[14] = z;
            m[15] = 1;
            return m;
        };
        TRXform.setRowsMat3x4Rot = function (m, r) {
            return r.toRotMatRows3x4(m);
        };
        TRXform.setRowsMat3x4Trans = function (m, t) {
            var ref, x, y, z;
            ref = t.xyz, x = ref[0], y = ref[1], z = ref[2];
            m[3] = x;
            m[7] = y;
            m[11] = z;
            return m;
        };
        TRXform.prototype.trans = function () {
            return this._t;
        };
        TRXform.prototype.rot = function () {
            return this._r;
        };
        TRXform.prototype.toStr = function () {
            return "trans=" + (this._t.asString4()) + "  rot=" + (this._r.asString4());
        };
        TRXform.prototype.asStr = function () {
            return this.toStr();
        };
        TRXform.prototype.setTR = function (t, r) {
            this._t = t;
            this._r = r;
            return this;
        };
        TRXform.prototype.setT = function (t) {
            this._t = t;
            return this;
        };
        TRXform.prototype.setR = function (r) {
            this._r = r;
            return this;
        };
        TRXform.prototype.copyTRX = function (trx) {
            return this.copyTR(trx._t, trx._r);
        };
        TRXform.prototype.copyTR = function (t, r) {
            this._t.setFromE3V(t);
            this._r.setFromRQ(r);
            return this;
        };
        TRXform.prototype.copyT = function (t) {
            this._t.setFromE3V(t);
            return this;
        };
        TRXform.prototype.copyR = function (rv) {
            this._r.setFromRQ(r);
            return this;
        };
        TRXform.prototype.copyTRV = function (tv, rv) {
            V3.setV3(this._t.xyz, tv);
            RQ.setQV(this._r.xyzw, rv);
            return this;
        };
        TRXform.prototype.copyTV = function (tv) {
            V3.setV3(this._t.xyz, tv);
            return this;
        };
        TRXform.prototype.copyRV = function (rv) {
            RQ.setQV(this._r.xyzw, rv);
            return this;
        };
        TRXform.prototype.setPostStar = function (trx) {
            this._t.setAdd(this._r.rotate(V3.fromE3V(trx._t)));
            this._r.setPostMultiply(trx._r);
            return this;
        };
        TRXform.prototype.setPreStar = function (trx) {
            (this._t.setRotate(trx._r)).setAdd(trx._t);
            this._r.setPreMultiply(trx._r);
            return this;
        };
        TRXform.prototype.setPostStarRot = function (rq) {
            this._r.setPostMultiply(rq);
            return this;
        };
        TRXform.prototype.setPreStarRot = function (rq) {
            this._t.setRotate(rq);
            this._r.setPreMultiply(rq);
            return this;
        };
        TRXform.prototype.setInvert = function () {
            this._r.setInvert();
            (this._t.setNegate()).setRotate(this._r);
            return this;
        };
        TRXform.prototype.inverse = function () {
            return (TRX.fromTRX(this)).setInvert();
        };
        TRXform.prototype.transform = function (e3v) {
            return (this._r.rotate(e3v)).setAdd(this._t);
        };
        TRXform.prototype.convertToMat4x4 = function (m) {
            m[3] = m[7] = m[11] = 0;
            TRX.setMat4x4Trans(m, this._t);
            return TRX.setMat4x4Rot(m, this._r);
        };
        TRXform.prototype.convertToRowsMat3x4 = function (m) {
            TRX.setRowsMat3x4Trans(m, this._t);
            return TRX.setRowsMat3x4Rot(m, this._r);
        };
        TRXform.prototype.makeMat4x4 = function () {
            var m;
            m = new Float32Array(16);
            return this.convertToMat4x4(m);
        };
        return TRXform;
    })();
    cwaenv.add(TRXform, "TRXform");
}).call(this);