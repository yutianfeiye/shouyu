//-------- js/AvCache.js --------
// Generated by CoffeeScript 1.12.2
(function () {
    var AvCache, AvDataAccess, console, cwaenv, document, log, loglev;
    cwaenv = this.getCWAEnv();
    AvDataAccess = cwaenv.get("AvDataAccess");
    console = this.console;
    document = this.document;
    loglev = 1;
    log = loglev > 0 ? console.log.bind(console) : function () {};
    AvCache = (function () {
        function AvCache(avName) {
            this.avName = avName;
            this._ADA = new AvDataAccess(this.avName);
        }
        AvCache._theCache = {};
        AvCache.get = function (av) {
            var cac, ref;
            cac = (ref = AvCache._theCache) != null ? ref[av] : void 0;
            if (cac != null) {} else {
                AvCache._theCache[av] = cac = new AvCache(av);
            }
            return cac;
        };
        AvCache.prototype.hasZIPEnts = function () {
            var ref;
            return ((ref = this._ADA) != null ? ref.XMLs : void 0) != null;
        };
        AvCache.prototype.getZIPEnt = function (ent) {
            var prom;
            if (this.hasZIPEnts()) {
                return this._ADA.extractAvDefEntry(ent);
            } else {
                prom = new Promise((function (_this) {
                    return function (resolve, reject) {
                        return _this._ADA.scanZIPProm.then(function () {
                            return (_this._ADA.extractAvDefEntry(ent)).then(function (v) {
                                resolve(v);
                                return v;
                            });
                        });
                    };
                })(this));
                return prom;
            }
        };
        AvCache.prototype.procAvDef = function (avDefHandler) {
            return (this.getZIPEnt(AvDataAccess.STD_JARP_TAG)).then((function (_this) {
                return function (dv) {
                    _this._ADA.procAvDef(dv, avDefHandler);
                    return dv;
                };
            })(this));
        };
        return AvCache;
    })();
    cwaenv.add(AvCache, "AvCache");
}).call(this);