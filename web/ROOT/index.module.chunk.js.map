{"version":3,"sources":["./src/app/speech-to-text/index.component.html","./src/app/speech-to-text/index.component.ts","./src/app/speech-to-text/index.module.ts","./src/app/speech-to-text/routing.module.ts","./src/lib/speech2text/speech.component.css","./src/lib/speech2text/speech.component.html","./src/lib/speech2text/speech.component.ts","./src/lib/speech2text/speech.module.ts"],"names":[],"mappings":"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","file":"index.module.chunk.js","sourcesContent":["module.exports = \"<div fxLayoutGap=\\\"15px\\\" class=\\\"all-page gray\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <mat-card [formGroup]=\\\"form\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\n        <mat-card-title>\\n            Sample speech to text - Sample using Angular Form\\n        </mat-card-title>\\n        <speech2text [props]='props'></speech2text>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save(containerFormat)\\\">保存</button>\\n    </mat-card>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/speech-to-text/index.component.html\n// module id = ./src/app/speech-to-text/index.component.html\n// module chunks = index.module","import { Component, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport JSONFormatter from 'json-formatter-js';\n\nimport { RecorderService } from '../../lib/speech2text/core-audio/recorder/recorder.service';\n\n\n@Component({\n  selector: 'text2-speech',\n  templateUrl: 'index.component.html'\n})\nexport class IndexComponent {\n  form: FormGroup;\n\n  props: any = {\n    lang: 'cmn-Hans-CN',\n    onChange: (value) => console.log(value + '====') ,\n    onEnd: (value) => console.log(value + '#####')\n  };\n\n  constructor(\n    private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n\n  buildForm(): void {\n    this.form = this.fb.group({\n      'text': ['', [\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(10)\n      ]]\n    });\n  }\n\n  save(element: HTMLElement) {\n    console.log(this.form.value);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/speech-to-text/index.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule, MatButtonModule } from '@angular/material';\nimport { RoutingModule } from './routing.module';\nimport { IndexComponent } from './index.component';\nimport { SpeechModule } from '../../lib/speech2text/speech.module';\n\nconst routes: Routes = [\n    { path: '', component: IndexComponent }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FlexLayoutModule,\n        MatCardModule,\n        MatButtonModule,\n        RoutingModule,\n        SpeechModule\n    ],\n    declarations: [IndexComponent],\n    providers: []\n})\nexport class IndexModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/speech-to-text/index.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IndexComponent } from './index.component';\n\nconst routes: Routes = [\n  {\n    path: '' , component : IndexComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n// tslint:disable-next-line:eofline\nexport class RoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/speech-to-text/routing.module.ts","module.exports = \".chatInputWrapper {\\n  position: relative;\\n  height: 120px;\\n}\\n.micImg {\\n  position: absolute;\\n  width: 38px;\\n  height: 38px;\\n  right: 5px;\\n  top: 1px;\\n}\\n.chatMessageInput {\\n  background-color: #ffffff;\\n  padding: 0 10px;\\n  margin: 0;\\n  width: 100%;\\n  border-radius: 2px;\\n  border: 1px solid #e5e9ec;\\n  -webkit-transition: background 0.2s linear 0s, -webkit-box-shadow 0.2s linear 0s;\\n  transition: background 0.2s linear 0s, -webkit-box-shadow 0.2s linear 0s;\\n  transition: background 0.2s linear 0s, box-shadow 0.2s linear 0s;\\n  transition: background 0.2s linear 0s, box-shadow 0.2s linear 0s, -webkit-box-shadow 0.2s linear 0s;\\n  outline: 0;\\n  height: 40px;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/speech2text/speech.component.css\n// module id = ./src/lib/speech2text/speech.component.css\n// module chunks = index.module","module.exports = \"<div class=\\\"chatInputWrapper\\\"> \\n    <img *ngIf=\\\"this.supportVoice\\\" \\n    [src]=\\\"this.speaking ? micAnimate : mic\\\" \\n    class=\\\"micImg\\\"\\n    (click)=\\\"this.say()\\\" />\\n        <input\\n            (change)=\\\"changeValue()\\\"\\n            [(ngModel)]=\\\"inputValue\\\" \\n            class=\\\"chatMessageInput\\\"\\n            placeholder=\\\"Type your message\\\" \\n            fxFlex=\\\"100\\\"  \\n        />\\n\\n        <audio controls autoplay style=\\\"padding:20px\\\"></audio>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/speech2text/speech.component.html\n// module id = ./src/lib/speech2text/speech.component.html\n// module chunks = index.module","import { Component, Input, Inject , ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, NgControl, ControlValueAccessor } from '@angular/forms';\nimport { RecorderService } from './core-audio/recorder/recorder.service';\n\ndeclare var window: any;\n\ninterface IWindow extends Window {\n  webkitSpeechRecognition: any;\n  webkitSpeechGrammarList: any;\n  SpeechGrammarList: any;\n  SpeechRecognition: any;\n}\n\n@Component({\n  selector: 'speech2text',\n  templateUrl: 'speech.component.html',\n  styleUrls: ['speech.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class SpeechComponent   {\n\n  valueFormated;\n\n  mic = '/assets/mic.gif';\n  micAnimate = '/assets/mic-animate.gif';\n\n  speaking = false;\n\n  inputValue = '';\n\n  supportVoice = 'webkitSpeechRecognition' in window;\n\n  @Input()\n  props: any;\n\n  @Input()\n  recognitionType = 'google';\n\n  recognition: any;\n\n  constructor( private detectRef: ChangeDetectorRef, private recorderService: RecorderService) {\n\n  }\n\n  ngOnInit(): void {\n    if (this.supportVoice && this.recognitionType !== 'xunfei') {\n      //   const WebkitSpeechRecognition = IWindow.webkitSpeechRecognition;\n         const { webkitSpeechRecognition, webkitSpeechGrammarList }: IWindow = <IWindow>window;\n         this.recognition = new webkitSpeechRecognition();\n         this.recognition.continuous = true;\n         this.recognition.interimResults = true;\n         this.recognition.lang = this.props.lang || 'cmn-Hans-CN';\n         this.recognition.onresult = (event) => {\n           let interimTranscript = '';\n           let finalTranscript = '';\n           for (let i = event.resultIndex; i < event.results.length; ++i) {\n             if (event.results[i].isFinal) {\n               finalTranscript += event.results[i][0].transcript;\n               this.inputValue = finalTranscript;\n               this.detectRef.detectChanges();\n               if (this.props.onChange) { this.props.onChange(finalTranscript); }\n               if (this.props.onEnd) { this.props.onEnd(finalTranscript); }\n             } else {\n               interimTranscript += event.results[i][0].transcript;\n                 this.inputValue = interimTranscript;\n               if (this.props.onChange) { this.props.onChange(interimTranscript); }\n             }\n           }\n         };\n       }\n  }\n  changeValue(event) {\n      this.inputValue = event.target.value;\n  }\n\n  say() {\n    if (this.supportVoice && this.recognitionType !== 'xunfei') {\n      if (!this.speaking) {\n        // start listening\n        this.inputValue = '';\n        this.recognition.start();\n      } else {\n        this.recognition.stop();\n      //  const question = this.inputValue;\n      }\n    } else {\n      if (!this.speaking) {\n        this.recorderService.start();\n      } else {\n        this.recorderService.stop();\n      }\n    }\n    this.speaking = !this.speaking;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/speech2text/speech.component.ts","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SpeechComponent } from './speech.component';\n\n@NgModule({\n  declarations: [\n    SpeechComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    SpeechComponent\n  ],\n\n  bootstrap: [SpeechComponent]\n})\nexport class SpeechModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/speech2text/speech.module.ts"],"sourceRoot":"webpack:///"}