{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/routing.module.ts","./src/environments/environment.ts","./src/lib/speech2text/core-audio/core-audio.module.ts","./src/lib/speech2text/core-audio/index.ts","./src/lib/speech2text/core-audio/recorder/recorder.service.ts","./src/lib/speech2text/core-audio/worker/web-worker.ts","./src/lib/speech2text/core-audio/worker/worker.service.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"app/dictionary/item-input.module\": [\n\t\t\"./src/app/dictionary/item-input.module.ts\",\n\t\t\"item-input.module\",\n\t\t\"common\"\n\t],\n\t\"app/speech-to-text/index.module\": [\n\t\t\"./src/app/speech-to-text/index.module.ts\",\n\t\t\"common\",\n\t\t\"index.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<!-- The content below is only a placeholder and can be replaced.\\n<div style=\\\"text-align:center\\\">\\n  <div>\\n    <div>点击录音按钮开始说话，说完之后再次点击按钮结束说话</div>\\n    <speech></speech>\\n  </div>\\n</div> -->\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'app';\n// }\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  constructor() {\n\n\n    console.log('99999999999999999999999999999999999999999999');\n   }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './routing.module';\nimport { CoreAudioModule } from '../lib/speech2text/core-audio';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CoreAudioModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: '', loadChildren: 'app/dictionary/item-input.module#ItemInputModule' },\n  { path: 'speech', loadChildren: 'app/speech-to-text/index.module#IndexModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/routing.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { NgModule } from '@angular/core';\nimport { RecorderService } from './recorder/recorder.service';\nimport { WorkerService } from './worker/worker.service';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  providers: [\n    RecorderService,\n    WorkerService\n  ]\n})\nexport class CoreAudioModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/speech2text/core-audio/core-audio.module.ts","export * from './recorder/recorder.service';\nexport { CoreAudioModule } from './core-audio.module';\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/speech2text/core-audio/index.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { WorkerService, } from './../worker/worker.service';\nimport { WebWorker } from './../worker/web-worker';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class RecorderService {\n  private context: any;\n  private jsAudioNode: any;\n  private mediaStream: any;\n  private audioInput: any;\n  private bufferSize = 4096;\n  private sampleRate = 44100;\n  private recordingLength = 0;\n  private blob: Blob;\n  private audioChannel: any[] = [];\n  private stream: any;\n  private recording = new BehaviorSubject<boolean>(false);\n\n  constructor(private workerService: WorkerService) {\n    this.onAudioProcess = this.onAudioProcess.bind(this);\n  }\n\n  private onAudioProcess(event) {\n    if (!this.recording.value) {\n      return;\n    }\n    const audioData = event.inputBuffer.getChannelData(0);\n    this.audioChannel.push(new Float32Array(audioData));\n    this.recordingLength += this.bufferSize;\n  }\n\n  private getAudioBuffer(config, callback) {\n    function processAudioBuffer(config, cb) {\n      function mergeBuffer(channelBuffer, rLength) {\n        const result = new Float64Array(rLength);\n        let offset = 0;\n        const lng = channelBuffer.length;\n        for (let i = 0; i < lng; i++) {\n          const buffer = channelBuffer[i];\n          result.set(buffer, offset);\n          offset += buffer.length;\n        }\n        return result;\n      }\n\n      function writeUTFBytes(view, offset, string) {\n        const lng = string.length;\n        for (let i = 0; i < lng; i++) {\n          view.setUint8(offset + i, string.charCodeAt(i));\n        }\n      }\n\n      function interleave(inputL, inputR) {\n        const compression = 44100 / 11025;    // 计算压缩率\n        const length = inputL.length / compression;\n        const result = new Float32Array(length);\n        let index = 0,\n          inputIndex = 0;\n        while (index < length) {\n            result[index] = inputL[inputIndex];\n            inputIndex += compression; // 每次都跳过3个数据\n            index++;\n        }\n        return result;\n    }\n\n      function floatTo8BitPCM(output, offset, input) {\n        for (let i = 0; i < input.length; i++ , offset++) {\n          const s = Math.max(-1, Math.min(1, input[i]));\n          let val = s < 0 ? s * 0x8000 : s * 0x7FFF;\n          // tslint:disable-next-line:radix\n          val = 255 / (65535 / (val + 32768));\n          output.setInt8(offset, val, true);\n        }\n      }\n\n      function floatTo16BitPCM(output, offset, input) {\n        for (let i = 0; i < input.length; i++, offset += 2) {   // 因为是int16所以占2个字节,所以偏移量是+2\n            const s = Math.max(-1, Math.min(1, input[i]));\n            output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n\n    // function encodeWAV(config, samples) {\n    //     const sampleRate = config.sampleRate;\n    //     const dataLength = samples.length;\n    //     const buffer = new ArrayBuffer(44 + dataLength * 2);\n    //     const view = new DataView(buffer);\n\n    //     const sampleRateTmp = sampleRate; // sampleRate;//写入新的采样率\n    //     const sampleBits = 8;\n    //     const channelCount = 1;\n    //     let offset = 0;  /* 资源交换文件标识符 */\n    //     writeUTFBytes(view, offset, 'RIFF'); offset += 4;   /* 下个地址开始到文件尾总字节数,即文件大小-8 */\n    //     view.setUint32(offset, 44 + dataLength, true); offset += 4;   /* WAV文件标志 */\n    //     writeUTFBytes(view, offset, 'WAVE'); offset += 4;  /* 波形格式标志 */\n    //     writeUTFBytes(view, offset, 'fmt '); offset += 4;  /* 过滤字节,一般为 0x10 = 16 */\n    //     view.setUint32(offset, 16, true); offset += 4;   /* 格式类别 (PCM形式采样数据) */\n    //     view.setUint16(offset, 1, true); offset += 2;   /* 通道数 */\n    //     view.setUint16(offset, channelCount, true); offset += 2;  /* 采样率,每秒样本数,表示每个通道的播放速度 */\n    //     view.setUint32(offset, sampleRateTmp, true); offset += 4; /* 波形数据传输率 (每秒平均字节数) 通道数×每秒数据位数×每样本数据位/8 */\n    //     view.setUint32(offset, sampleRateTmp * 2, true); offset += 4; /* 快数据调整数 采样一次占用字节数 通道数×每样本的数据位数/8 */\n    //     view.setUint16(offset, channelCount * (sampleBits / 8), true); offset += 2;  /* 每样本数据位数 */\n    //     view.setUint16(offset, sampleBits, true); offset += 2;  /* 数据标识符 */\n    //     writeUTFBytes(view, offset, 'data'); offset += 4;\n    //     /* 采样数据总数,即数据总大小-44 */\n    //     view.setUint32(offset, dataLength, true); offset += 4;\n    //     /* 采样数据 */\n    //     floatTo16BitPCM(view, 44, samples);\n    //     return [buffer, view];\n    //   }\n\n      let audioBuffer = config.audioBuffer.slice(0);\n\n      audioBuffer = mergeBuffer(audioBuffer, config.internalInterleavedLength);\n      const audioBufferLength = audioBuffer.length;\n      // create wav file\n      const resultingBufferLength = 44 + audioBufferLength * 2;\n      const buffer = new ArrayBuffer(resultingBufferLength);\n      const view = new DataView(buffer);\n      const sampleRate = 44100;\n\n      writeUTFBytes(view, 0, 'RIFF');\n      view.setUint32(4, 44 + audioBufferLength * 2, true);\n      writeUTFBytes(view, 8, 'WAVE');\n      writeUTFBytes(view, 12, 'fmt ');\n      view.setUint32(16, 16, true);\n      view.setUint16(20, 1, true);\n      view.setUint16(22, 1, true);\n      view.setUint32(24, sampleRate, true);\n      view.setUint32(28, sampleRate * 2, true);\n      view.setUint16(32, 2, true);\n      view.setUint16(34, 16, true);\n      writeUTFBytes(view, 36, 'data');\n      view.setUint32(40, audioBufferLength * 2, true);\n\n      // write the PCM samples\n      let index = 44;\n      const volume = 1;\n      for (let i = 0; i < audioBufferLength; i++) {\n        view.setInt16(index, audioBuffer[i] * (0x7FFF * volume), true);\n        index += 2;\n      }\n\n      if (cb) {\n        return cb({\n          buffer: buffer,\n          view: view\n        });\n      }\n\n      this.postMessage({\n        buffer: buffer,\n        view: view\n      });\n    }\n\n    const webWorker: WebWorker = this.workerService.execute(processAudioBuffer);\n    webWorker.onmessage(function (event) {\n      callback(event.data.buffer, event.data.view);\n    });\n    webWorker.postMessage(config);\n  }\n\n  private stopRecording(callback) {\n    this.recording.next(false);\n    this.audioInput.disconnect();\n    this.jsAudioNode.disconnect();\n    const config = {\n      sampleRate: this.sampleRate,\n      internalInterleavedLength: this.recordingLength,\n      audioBuffer: this.audioChannel\n    };\n    this.getAudioBuffer(config, (view) => {\n      this.blob = new Blob([view], {\n        type: 'audio/wav'\n      });\n      // tslint:disable-next-line:no-unused-expression\n      callback && callback(this.blob);\n    });\n  }\n\n  public isRecording(): Observable<boolean> {\n    return this.recording.asObservable();\n  }\n\n  public start() {\n    console.log('start recording');\n    // tslint:disable-next-line:max-line-length\n    const AudioContext = (window.AudioContext || window.webkitAudioContext || window.mozAudioContext\n      || window.oAudioContext || window.msAudioContext);\n    this.context = new AudioContext();\n\n    if (this.context.createJavaScriptNode) {\n      this.jsAudioNode = this.context.createJavaScriptNode(this.bufferSize, 1, 1);\n    } else if (this.context.createScriptProcessor) {\n      this.jsAudioNode = this.context.createScriptProcessor(this.bufferSize, 1, 1);\n    } else {\n      console.error('WebAudio API has no support on this browser');\n    }\n\n    this.jsAudioNode.connect(this.context.destination);\n\n    this.stream = navigator.mediaDevices.getUserMedia({ audio: true })\n      .then((microphone) => {\n        this.recording.next(true);\n        this.mediaStream = microphone;\n\n        this.audioInput = this.context.createMediaStreamSource(microphone);\n        this.audioInput.connect(this.jsAudioNode);\n\n        console.log('microphone captured');\n\n        this.jsAudioNode.onaudioprocess = this.onAudioProcess;\n      })\n      .catch((err) => console.error(err));\n  }\n\n  public stop() {\n    console.log('stop recording');\n    this.mediaStream.getAudioTracks()[0].stop();\n    this.stopRecording((blob: Blob) => {\n      const url = URL.createObjectURL(blob);\n      const audio = document.querySelector('audio');\n      audio.src = url;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/speech2text/core-audio/recorder/recorder.service.ts","export class WebWorker {\n  private worker: Worker;\n  public url: string;\n\n  constructor(url: string) {\n    this.worker = new Worker(url);\n    this.url = url;\n  }\n\n  onmessage(func: (this: Worker, ev: MessageEvent) => any) {\n    this.worker.onmessage = func;\n\n    // release memory\n    URL.revokeObjectURL(this.url);\n  }\n\n  onerror(func: (this: AbstractWorker, ev: ErrorEvent) => any) {\n    this.worker.onerror = func;\n  }\n\n  postMessage(message: any, transferlist?: any[]): void {\n    this.worker.postMessage(message, transferlist);\n  }\n\n  terminate(): void {\n    this.worker.terminate();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/speech2text/core-audio/worker/web-worker.ts","import { Injectable } from '@angular/core';\nimport { WebWorker } from './web-worker';\n\n@Injectable()\nexport class WorkerService {\n\n  constructor() { }\n\n  public execute(func: Function): WebWorker {\n    const blobContent = [func.toString(), `;this.onmessage = function(e) {${func.name}(e.data);}`];\n    const blob = new Blob(blobContent, { type: 'application/javascript' });\n    const url = URL.createObjectURL(blob);\n\n    return new WebWorker(url);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/speech2text/core-audio/worker/worker.service.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}